// Copyright Zero Games. All Rights Reserved.

using System.Text;

namespace ZeroGames.ZSharp.Build.Glue;

public class ClassWriter : IDisposable, IAsyncDisposable
{

	public ClassWriter(ExportedClass exportedClass, Stream stream)
	{
		_exportedClass = exportedClass;
		_sw = new(stream, Encoding.UTF8);
	}

	public void Dispose()
	{
		_sw.Dispose();
	}

	public async ValueTask DisposeAsync()
	{
		await _sw.DisposeAsync();
	}

	public Task WriteAsync() => Task.Run(() =>
	{
		_sw.Write(
@$"// Copyright Zero Games. All Rights Reserved.

// THIS FILE IS GENERATED BY ZSHARP.
// DO NOT MODIFY DIRECTLY!

#region GENERATED CODE

{_usingBlock}

namespace {_exportedClass.Namespace};

[System.CodeDom.Compiler.GeneratedCode(""ZSharp"", ""0.0.1"")]
public partial class {_exportedClass.Name} : {_baseType}
{{

{_classBody}

}}

#endregion


");
	});

	private string _usingBlock
	{
		get
		{
			return
@"using ZeroGames.ZSharp.Core;
using ZeroGames.ZSharp.UnrealEngine.Core;
using ZeroGames.ZSharp.UnrealEngine;
";
		}
	}

	private string _baseType
	{
		get
		{
			if (_exportedClass.BaseType[0] == '@')
			{
				return _exportedClass.BaseType switch
				{
					"@UCLASS" => "UnrealClassExportedObjectBase",
					"@USTRUCT" => "UnrealStructExportedObjectBase",
					"@PLAIN" => "PlainUnmanagedClassExportedObjectBase",
					_ => throw new ArgumentException($"Invalid special base type {_exportedClass.BaseType}")
				};
			}

			return _exportedClass.BaseType;
		}
	}

	private string _classBody
	{
		get
		{
			return string.Empty;
		}
	}

	private ExportedClass _exportedClass;
	private StreamWriter _sw;
	
}